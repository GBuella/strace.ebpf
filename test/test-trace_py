#!/bin/bash -ex
#
# Copyright 2017, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# test/test-trace_py -- test for trace_py using match and *.match files
#

# follow-fork option
if [ "$1" == "-f" ]; then
	echo "ERROR: follow-fork is not supported"
	exit 1
fi

if [ "$2" == "" ]; then
	echo "Usage: $0 <test-file> <test-number>"
	exit 1
fi

TEST_NUM=$2
TEST_FILE=$1
if [ ! -x $TEST_FILE ]; then
	echo "Error: executable file '$TEST_FILE' does not exist"
	exit 1
fi

TEST_DIR=$(dirname $0)
[ "$TEST_DIR" == "." ] && TEST_DIR=$(pwd)

FUNCT=$TEST_DIR/helper_functions.sh
COMMON=$TEST_DIR/common.sh
[ ! -f $COMMON -o ! -f $FUNCT ] \
	&& echo "Error: one of files is missing: $COMMON or $FUNCT" \
	&& exit 1

source $COMMON
source $FUNCT

PATTERN_START="close 0000000012345678"
PATTERN_END="close 0000000087654321"
OUT=output-$TEST_NUM.log
OUT_BARE=output-bare-$TEST_NUM.log
OUT_SORT=output-sort-$TEST_NUM.log

OPT_TRACE_PY="-t sys_futex 'r::sys_futex \"%llx\", retval' sys_poll 'r::sys_poll \"%llx\", retval'"

# XXX drop hard-coded path
export PATH="${PATH}:/home/vitalii/projects/bcc/tools/"

TRACE_PY=`which trace.py`
[ ! -x $TRACE_PY ] \
	&& echo "Error: executable file '$TRACE_PY' does not exist" \
	&& exit 1


require_superuser

# remove all logs of the current test
rm -f *-$TEST_NUM.log

# run tests
echo "# WAIT_TRACE_PY=1 $TEST_FILE $TEST_NUM >/dev/null &"
WAIT_TRACE_PY=1 $TEST_FILE $TEST_NUM >/dev/null &

TEST_PID=$!

RUN_TRACE_PY="ulimit -l 10240 && ulimit -n 10240 && $TRACE_PY -p $TEST_PID ${OPT_TRACE_PY}"

echo "# sudo bash -c \"$RUN_TRACE_PY\" >$OUT &"
sudo bash -c "$RUN_TRACE_PY" >$OUT &

sleep 1

kill -CONT $TEST_PID

wait $TEST_PID 

sudo pkill -INT trace.py

grep -v -e "PID.*TID" -e "$OUT" $OUT > $OUT_BARE

# tests without fork()
sort $OUT_BARE -o $OUT_SORT
cut_part_file $OUT_SORT "$PATTERN_START" "$PATTERN_END" > cut-$TEST_NUM.log

#check
